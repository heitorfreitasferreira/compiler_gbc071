package statemachine

import "github.com/heitorfreitasferreira/compiler/types"

// TODO: Quando o diagrama final estiver pronto, implementa-lo aqui
var DefaultDFA *DFA = NewDFA(
	[][]int{
		GetTransitionLetterDigit([]types.Tuple[[]byte, int]{
			{[]byte{'<'}, 1},
			{[]byte{'>'}, 2},
			{[]byte{'='}, 6},
			{[]byte{'!'}, 8},
			{Letter_, 10},
			{[]byte{'i'}, 12},
			{[]byte{'f'}, 18},
			{[]byte{'c'}, 24},
			{[]byte{'*'}, 29},
			{[]byte{'/'}, 32},
			{[]byte{'+', '-'}, 33},
			{[]byte{'\''}, 35},
			{Digit, 39},
			{[]byte{' '}, 47},
			{[]byte{'\\'}, 48},
			{[]byte{':'}, 51},
			{[]byte{')'}, 54},
			{[]byte{'('}, 55},
			{[]byte{','}, 56},
			{[]byte{';'}, 57},
			{[]byte{'b'}, 58},
			{[]byte{'e'}, 64},
			{[]byte{'m'}, 72},
			{[]byte{'d'}, 77},
			{[]byte{'t'}, 80},
			{[]byte{'w'}, 85},
			{[]byte{'r'}, 91},
			{[]byte{'u'}, 98},
		}), // 0
		GetTransition([]types.Tuple[byte, int]{{'=', 3}}, 4),
		GetTransition([]types.Tuple[byte, int]{{'=', 5}}, 4),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{}), // 5
		GetTransition([]types.Tuple[byte, int]{{'=', 7}}),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'=', 9}}),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransitionLetterDigit([]types.Tuple[[]byte, int]{{DigitOrLetterOrUnderscore, 10}}, 11), // 10
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'n', 13}, {'f', 14}}),
		GetTransition([]types.Tuple[byte, int]{{'t', 15}}),
		GetTransition([]types.Tuple[byte, int]{}, 16),
		GetTransition([]types.Tuple[byte, int]{}, 17), // 15
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'l', 19}}),
		GetTransition([]types.Tuple[byte, int]{{'o', 20}}),
		GetTransition([]types.Tuple[byte, int]{{'a', 21}}), // 20
		GetTransition([]types.Tuple[byte, int]{{'t', 22}}),
		GetTransition([]types.Tuple[byte, int]{}, 23),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'h', 25}}),
		GetTransition([]types.Tuple[byte, int]{{'a', 26}}), // 25
		GetTransition([]types.Tuple[byte, int]{{'r', 27}}),
		GetTransition([]types.Tuple[byte, int]{}, 28),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'*', 30}}),
		GetTransition([]types.Tuple[byte, int]{}), // 30
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{},34),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransitionLetterDigit([]types.Tuple[[]byte, int]{{Letter, 36}}), // 35
		GetTransition([]types.Tuple[byte, int]{{'\'', 37}}),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransitionLetterDigit([]types.Tuple[[]byte, int]{{Digit, 38}, {[]byte{'.'}, 39}, {[]byte{'E', 41}}}, 40),
		GetTransitionLetterDigit([]types.Tuple[[]byte, int]{{Digit, 39}, {[]byte{'E'}, 41}}, 40),
		GetTransition([]types.Tuple[byte, int]{}), // 40
		GetTransition([]types.Tuple[byte, int]{{'+', 42}, {'-', 43}}),
		GetTransitionLetterDigit([]types.Tuple[[]byte, int]{{Digit, 44}}),
		GetTransitionLetterDigit([]types.Tuple[[]byte, int]{{Digit, 44}}),
		GetTransitionLetterDigit([]types.Tuple[[]byte, int]{{Digit, 44}}, 45),
		GetTransition([]types.Tuple[byte, int]{}), // 45
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'t', 48}, {'n', 49}}),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'=', 52}}, 51), // 50
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{}), // 55
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'e', 58}}),
		GetTransition([]types.Tuple[byte, int]{{'g', 59}}),
		GetTransition([]types.Tuple[byte, int]{{'i', 60}}),
		GetTransition([]types.Tuple[byte, int]{{'n', 61}}), // 60
		GetTransition([]types.Tuple[byte, int]{}, 62),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'l', 64}, {'n', 68}}),
		GetTransition([]types.Tuple[byte, int]{{'s', 65}}),
		GetTransition([]types.Tuple[byte, int]{{'e', 66}}), // 65
		GetTransition([]types.Tuple[byte, int]{}, 67),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'d', 69}}),
		GetTransition([]types.Tuple[byte, int]{}, 70),
		GetTransition([]types.Tuple[byte, int]{}), // 70
		GetTransition([]types.Tuple[byte, int]{{'a', 72}}),
		GetTransition([]types.Tuple[byte, int]{{'i', 73}}),
		GetTransition([]types.Tuple[byte, int]{{'n', 74}}),
		GetTransition([]types.Tuple[byte, int]{}, 75),
		GetTransition([]types.Tuple[byte, int]{}), // 75
		GetTransition([]types.Tuple[byte, int]{{'o', 77}}),
		GetTransition([]types.Tuple[byte, int]{}, 78),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'h', 80}}),
		GetTransition([]types.Tuple[byte, int]{{'e', 81}}), // 80
		GetTransition([]types.Tuple[byte, int]{{'n', 82}}),
		GetTransition([]types.Tuple[byte, int]{}, 83),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'h', 85}}),
		GetTransition([]types.Tuple[byte, int]{{'i', 86}}), // 85
		GetTransition([]types.Tuple[byte, int]{{'l', 87}}),
		GetTransition([]types.Tuple[byte, int]{{'e', 88}}),
		GetTransition([]types.Tuple[byte, int]{}, 89),
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'e', 91}}), // 90
		GetTransition([]types.Tuple[byte, int]{{'p', 92}}),
		GetTransition([]types.Tuple[byte, int]{{'e', 93}}),
		GetTransition([]types.Tuple[byte, int]{{'a', 94}}),
		GetTransition([]types.Tuple[byte, int]{{'t', 95}}),
		GetTransition([]types.Tuple[byte, int]{}, 96), // 95
		GetTransition([]types.Tuple[byte, int]{}),
		GetTransition([]types.Tuple[byte, int]{{'n', 98}}),
		GetTransition([]types.Tuple[byte, int]{{'t', 99}}),
		GetTransition([]types.Tuple[byte, int]{{'i'}, 100}),
		GetTransition([]types.Tuple[byte, int]{{'l', 101}}), // 100
		GetTransition([]types.Tuple[byte, int]{}, 102),
		GetTransition([]types.Tuple[byte, int]{}),
	},
	map[int]types.Tuple[types.TokenType, bool]{
		3: {types.RELOP, false},
		4: {types.RELOP, true},
		5: {types.RELOP, false},
		7: {types.RELOP, false},
		9: {types.RELOP, false},
		11: {types.IDENTIFIER, true},
		17: {types.TYPE, true},
		16: {types.IF, true},
		23: {types.TYPE, true},
		28: {types.TYPE, true},
		30: {types.ARIOP_POW, false},
		31: {types.ARIOP_MULT, true},
		32: {types.ARIOP_MULT, false},
		34: {types.ARIOP_ADD, true},
		37: {types.CONST, false},
		45: {types.CONST, true},
		46: {types.SEPARATOR, false},
		48: {types.SEPARATOR, false},
		49: {types.SEPARATOR, false},
		51: {types.TYPE_SEPARATOR, true},
		52: {types.ASSIGN, false},
		53: {types.END_PAREN, false},
		54: {types.START_PAREN, false},
		55: {types.KKOMA, false},
		56: {types.SEMICOLON, false},
		62: {types.START_BLOCK, true},
		67: {types.KW_ELSE, true},
		70: {types.END_BLOCK, true},
		75: {types.KW_MAIN, true},
		78: {types.KW_DO, true},
		83: {types.KW_THEN, true},
		89: {types.KW_WHILE, true},
		96: {types.KW_REPEAT, true},
		102: {types.KW_UNTIL, true},
	},
)
